{"title":"Week 6: Introduction to R + Python = Quarto","markdown":{"yaml":{"title":"Week 6: Introduction to R + Python = Quarto","author":"Jeff Jacobs","institute":"DSAN Summer Bootcamp 2024<br>Georgetown University","format":{"revealjs":{"echo":true,"code-fold":true,"slide-number":true,"df-print":"kable","html-math-method":"mathjax","scrollable":true,"theme":["../_jjslides.scss"],"output-file":"slides.html","include-in-header":{"text":"<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'><link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"},"simplemenu":{"flat":true,"barhtml":{"header":"<div class='menubar'><span style='position: absolute; left: 8; padding-left: 8px;'><a href='./index.html'>&larr; Return to Notes</a></span><ul class='menu'></ul></div>"},"scale":0.5},"revealjs-plugins":["simplemenu"]},"html":{"df-print":"kable","html-math-format":"mathjax","echo":true,"code-fold":true,"output-file":"index.html","include-in-header":{"text":"<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'><link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"}}}},"headingText":"R and Python as \"Building Blocks\"","headingAttr":{"id":"","classes":[],"keyvalue":[["data-stack-name","Building Blocks"]]},"containsRefs":false,"markdown":"\n\n\n## Setting Up Your Environment {.smaller}\n\n*Tie yourself to the mast! Please!*\n\n![[*Ulysses and the Sirens*](https://en.wikipedia.org/wiki/Ulysses_and_the_Sirens_(Waterhouse)){target='_blank'}, J. W. Waterhouse (1891)](images/ulysses.jpg){fig-align=\"center\"}\n\n| | | |\n| - | - | - |\n| Dive right into coding<br>(Bc you think data science = coding) | $\\implies$ | Spend 75% of your time wrestling with environment issues üòî |\n| Think about + set up environment before diving into coding | $\\implies$ | Spend 25% of your time wrestling with environment issues üòé |\n\n: {tbl-colwidths=\"[45, 10, 45]\"}\n\n## If You Were Just Coding in Python\n\n::: {#python-only-box style=\"border: 2px solid black; padding: 10px;\"}\n\n{{< include _python-box.qmd >}}\n\n:::\n\n## Python-On-Its-Own Demonstration\n\n* <span class=\"badge rounded-pill text-bg-light\"><i class=\"bi bi-gear\"></i> Environment!</span> Create a `bootcamp-w06` folder, and **open this folder in VSCode!**\n* Create a `hello.py` file, with the following content:\n\n  ``` {.python filename=\"hello.py\"}\n  print(\"Hello from Python!\")\n  ```\n\n* Now open Terminal (in VSCode: Right click in Explorer panel &rarr; \"Open in Integrated Terminal\") and execute\n\n  ``` {.bash code-line-numbers=\"false\"}\n  python hello.py\n  ```\n\n* You should see the following output:\n\n  ```\n  Hello from Python!\n  ```\n\n## Python-Within-Jupyter Demo\n\n* Still within the Integrated Terminal, type `jupyter` and press Enter...\n* (If Python is correctly set up and Jupyter has been correctly installed) You'll see an interface allowing you to create **Notebooks**\n\n![](images/jupyter_screenshot.jpeg){fig-align=\"center\"}\n\n## Jupyter Notebooks (`.ipynb` Files) {.crunch-title .crunch-ul}\n\n* You saw these in more detail during Python section!\n* All you need to remember here is: this is a **wrapper** around the core `python` executable: all it does is\n  1. **Takes the code you enter into a cell**\n  2. **Runs it** using `python <temporary file>.py`\n  3. **Stores** the output within the `.ipynb` file itself\n\n![*(Make sure to terminate Jupyter using {{< kbd mac=Command-C win=Control-C >}} once you're done using it!)*](images/jupyter_hello.jpeg){fig-align=\"center\"}\n\n## If You Were Just Coding in R\n\n::: {#r-studio-only-box style=\"border: 2px solid black; padding: 10px;\"}\n\n{{< include _r-studio-box.qmd >}}\n\n:::\n\n## R-On-Its-Own Demonstration\n\n* Create a `hello.r` file, with the following content:\n\n  ``` {.r filename=\"hello.r\"}\n  print(\"Hello from R!\")\n  ```\n\n* Now open Terminal (in VSCode: Right click in Explorer panel &rarr; \"Open in Integrated Terminal\") and execute\n\n  ``` {.bash code-line-numbers=\"false\"}\n  Rscript hello.r\n  ```\n\n* You should see the following output:\n\n  ```\n  [1] \"Hello from R!\"\n  ```\n\n* *(Plz notice the similarity with Python!)*\n\n# Rewiring Your Brain for Data Science {data-stack-name=\"Literate Programming\"}\n\n::: {style=\"font-size: 150%\"}\n\n| | | | |\n| - |:-:| - | - |\n| Python | *or* | R | ‚ùåüò™ |\n| Python | **AND** | R | ‚úÖüòé |\n\n:::\n\n## Literate Programming = Transparent Science!\n\n* Academic papers, video demonstrations, etc., can *hide* more than they *reveal*\n    * Ex: Look at all these [UI Templates](https://www.canva.com/prototypes/templates/mobile/){target='_blank'} on Canva!\n* Given a plot in some paper... How do we know they didn't just \"tweak\" the settings, for hours on end, to produce the result they wanted? ($\\neq$ ethical science)\n* One answer: if they provide the **code** that **produced** the figure, then we can **interrogate** their settings/choices, and change them, to see if the result still holds!\n\n## Markdown + R + Python $\\rightarrow$ Quarto\n\n* **Markdown** is basically glorified plaintext: text+basic formatting (bold, italics, headings, links, tables)\n* **R** is just a program that lives on your computer and executes R code\n* **Python** is just a program that lives on your computer and executes Python code\n* **Quarto** is a **wrapper** around R and Python, allowing you to write `.qmd` (**Q**uarto **M**ark**D**own) files: **Markdown documents containing R and Python code!**\n\n\n## Quarto Building Blocks {.smaller .crunch-p .crunch-images}\n\n<!-- start Quarto box -->\n::: {#quarto-box style=\"border: 2px solid black; padding: 10px;\"}\n\n<center>\n<img src=\"images/quarto_logo.svg\" width=\"20%\"></img>\n</center>\n\n<!-- start columns -->\n::: {layout=\"[48,4,48]\" layout-valign=\"center\"}\n\n::: {#r-studio-layout-cell}\n::: {#r-studio style=\"border: 2px solid black !important; padding: 8px;\"}\n\n{{< include _r-studio-box.qmd >}}\n\n:::\n:::\n::: {#quarto-plus-box}\n\n<h3 style=\"text-align: center;\">\\+</h3>\n\n:::\n::: {#python-layout-cell}\n<!-- start Jupyter column -->\n::: {#jupyter-col style=\"border: 2px solid black; padding: 8px;\"}\n\n{{< include _python-box.qmd >}}\n\n:::\n:::\n:::\n<!-- end columns -->\n\n:::\n<!-- end quarto box -->\n\n## Reproducibility and Literate Programming {.smaller .small-title}\n\n* **Reproducible document**: includes both the **content** (text, tables, figures) and the **code** or instructions required to **generate** that content.\n  * Designed to ensure that others can reproduce the same document, including its data analysis, results, and visualizations, consistently and accurately.\n  * tldr: If you're copying-and-pasting results from your **code output** to your **results document**, a red flag should go off in your head!\n* **Literate programming** is a coding and documentation approach where **code** and **explanations of the code** are combined in a single document.\n  * Emphasizes clear and understandable code by interleaving **human-readable text** (explanations, comments, and documentation) with **executable code**.\n\n## Single Source, Many Outputs {.smaller}\n\n* We can create content (text, code, results, graphics) within a **source document**, and then use different **weaving engines** to create different **document types**:\n\n::: columns\n::: {.column width=\"50%\"}\n\n* Documents\n  * Web pages (HTML)\n  * Word documents\n  * PDF files\n* Presentations\n  * HTML\n  * PowerPoint\n:::\n::: {.column width=\"50%\"}\n\n* Websites/blogs\n* Books\n* Dashboards\n* Interactive documents\n* Formatted journal articles\n\n:::\n:::\n\n# Demonstrations {data-name=\"Demonstrations\"}\n\n## VSCode Demonstrations\n\n* <span style=\"display: inline-flex;\">Quarto Websites <img src=\"images/vscode-globe.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Manuscripts <img src=\"images/vscode-circuit-board.svg\" width=\"60\" style=\"margin: 0 0.13em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Books <img src=\"images/vscode-book.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n\n## Posit.Cloud Demonstrations\n\n* <span style=\"display: inline-flex;\">Quarto Websites <img src=\"images/vscode-globe.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Manuscripts <img src=\"images/vscode-circuit-board.svg\" width=\"60\" style=\"margin: 0 0.13em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Books <img src=\"images/vscode-book.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n\n# R in Quarto {data-stack-name=\"R in Quarto\"}\n\n## So... What is R?\n\n* Python was created mainly for **software engineers**\n  * Statistical computing functionality requires **3rd-party imports**: `NumPy`, `SciPy`, `scikit-learn`\n* **R** was created mainly for **statisticians**\n  * Software engineering functionality often requires **3rd-party libraries**: e.g., `purrr` (for Python-style `lambda` functions)\n* One key implication for DSAN: **probability distributions** (Normal, Binomial, etc.) are **built into** R! (Available through `NumPy` in Python)\n\n## Probability Distribution Example {.smaller .crunch-details}\n\nDon't worry about the details of the code for now! Just note how...\n\n::: {.columns}\n::: {.column width=\"50%\"}\n\n`rbinom()` is **built into** R, whereas\n\n```{r}\n#| echo: true\n#| code-fold: false\nset.seed(1234)\ncoin_results <- rbinom(n=20, size=10, prob=0.5)\nprint(coin_results)\nclass(coin_results)\n```\n\n```{r}\nlibrary(tidyverse)\ncoin_flip_df <- tibble(num_heads = coin_results)\nggplot(coin_flip_df, aes(x=num_heads)) +\n  geom_bar()\n```\n\n:::\n::: {.column .nostretch width=\"50%\"}\n\n`rng.binomial()` requires **NumPy**\n\n```{python}\n#| echo: true\n#| code-fold: false\nimport numpy as np\nrng = np.random.default_rng(seed=1234)\nten_coin_results = rng.binomial(n=10, p=0.5, size=20)\nprint(ten_coin_results)\ntype(ten_coin_results)\n```\n\n```{python}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nresult_plot = plt.figure()\nresult_plot.set_figheight(3.5)\ncoin_flip_df = pd.DataFrame({'num_heads': ten_coin_results})\nresult_plot = sns.histplot(data=coin_flip_df, x='num_heads')\nplt.tight_layout()\nplt.show()\n```\n\n:::\n:::\n\n## The Moment You've Been Waiting For ü§Ø {.title-08}\n\n* How did I include **both** R and Python code (and its outputs) in the previous slide?\n* Quarto allows **integration** of R+Python via **code blocks!**\n\n  ::: {.columns}\n  ::: {.column width=\"47%\"}\n\n  ```` {.quarto filename=\"my_file.qmd\"}\n  ```{{python}}\n  print(\"Hello from Python!\")\n  ```\n\n  ```{{r}}\n  print(\"Hello from R!\")\n  ```\n  ````\n\n  :::\n  ::: {.column width=\"4%\"}\n\n  &rarr;\n\n  :::\n  ::: {.column width=\"47%\"}\n\n  ``` {.bash code-line-numbers=\"false\"}\n  Hello from Python!\n\n  Hello from R!\n  ```\n\n  :::\n  :::","srcMarkdownNoYaml":"\n\n# R and Python as \"Building Blocks\" {data-stack-name=\"Building Blocks\"}\n\n## Setting Up Your Environment {.smaller}\n\n*Tie yourself to the mast! Please!*\n\n![[*Ulysses and the Sirens*](https://en.wikipedia.org/wiki/Ulysses_and_the_Sirens_(Waterhouse)){target='_blank'}, J. W. Waterhouse (1891)](images/ulysses.jpg){fig-align=\"center\"}\n\n| | | |\n| - | - | - |\n| Dive right into coding<br>(Bc you think data science = coding) | $\\implies$ | Spend 75% of your time wrestling with environment issues üòî |\n| Think about + set up environment before diving into coding | $\\implies$ | Spend 25% of your time wrestling with environment issues üòé |\n\n: {tbl-colwidths=\"[45, 10, 45]\"}\n\n## If You Were Just Coding in Python\n\n::: {#python-only-box style=\"border: 2px solid black; padding: 10px;\"}\n\n{{< include _python-box.qmd >}}\n\n:::\n\n## Python-On-Its-Own Demonstration\n\n* <span class=\"badge rounded-pill text-bg-light\"><i class=\"bi bi-gear\"></i> Environment!</span> Create a `bootcamp-w06` folder, and **open this folder in VSCode!**\n* Create a `hello.py` file, with the following content:\n\n  ``` {.python filename=\"hello.py\"}\n  print(\"Hello from Python!\")\n  ```\n\n* Now open Terminal (in VSCode: Right click in Explorer panel &rarr; \"Open in Integrated Terminal\") and execute\n\n  ``` {.bash code-line-numbers=\"false\"}\n  python hello.py\n  ```\n\n* You should see the following output:\n\n  ```\n  Hello from Python!\n  ```\n\n## Python-Within-Jupyter Demo\n\n* Still within the Integrated Terminal, type `jupyter` and press Enter...\n* (If Python is correctly set up and Jupyter has been correctly installed) You'll see an interface allowing you to create **Notebooks**\n\n![](images/jupyter_screenshot.jpeg){fig-align=\"center\"}\n\n## Jupyter Notebooks (`.ipynb` Files) {.crunch-title .crunch-ul}\n\n* You saw these in more detail during Python section!\n* All you need to remember here is: this is a **wrapper** around the core `python` executable: all it does is\n  1. **Takes the code you enter into a cell**\n  2. **Runs it** using `python <temporary file>.py`\n  3. **Stores** the output within the `.ipynb` file itself\n\n![*(Make sure to terminate Jupyter using {{< kbd mac=Command-C win=Control-C >}} once you're done using it!)*](images/jupyter_hello.jpeg){fig-align=\"center\"}\n\n## If You Were Just Coding in R\n\n::: {#r-studio-only-box style=\"border: 2px solid black; padding: 10px;\"}\n\n{{< include _r-studio-box.qmd >}}\n\n:::\n\n## R-On-Its-Own Demonstration\n\n* Create a `hello.r` file, with the following content:\n\n  ``` {.r filename=\"hello.r\"}\n  print(\"Hello from R!\")\n  ```\n\n* Now open Terminal (in VSCode: Right click in Explorer panel &rarr; \"Open in Integrated Terminal\") and execute\n\n  ``` {.bash code-line-numbers=\"false\"}\n  Rscript hello.r\n  ```\n\n* You should see the following output:\n\n  ```\n  [1] \"Hello from R!\"\n  ```\n\n* *(Plz notice the similarity with Python!)*\n\n# Rewiring Your Brain for Data Science {data-stack-name=\"Literate Programming\"}\n\n::: {style=\"font-size: 150%\"}\n\n| | | | |\n| - |:-:| - | - |\n| Python | *or* | R | ‚ùåüò™ |\n| Python | **AND** | R | ‚úÖüòé |\n\n:::\n\n## Literate Programming = Transparent Science!\n\n* Academic papers, video demonstrations, etc., can *hide* more than they *reveal*\n    * Ex: Look at all these [UI Templates](https://www.canva.com/prototypes/templates/mobile/){target='_blank'} on Canva!\n* Given a plot in some paper... How do we know they didn't just \"tweak\" the settings, for hours on end, to produce the result they wanted? ($\\neq$ ethical science)\n* One answer: if they provide the **code** that **produced** the figure, then we can **interrogate** their settings/choices, and change them, to see if the result still holds!\n\n## Markdown + R + Python $\\rightarrow$ Quarto\n\n* **Markdown** is basically glorified plaintext: text+basic formatting (bold, italics, headings, links, tables)\n* **R** is just a program that lives on your computer and executes R code\n* **Python** is just a program that lives on your computer and executes Python code\n* **Quarto** is a **wrapper** around R and Python, allowing you to write `.qmd` (**Q**uarto **M**ark**D**own) files: **Markdown documents containing R and Python code!**\n\n\n## Quarto Building Blocks {.smaller .crunch-p .crunch-images}\n\n<!-- start Quarto box -->\n::: {#quarto-box style=\"border: 2px solid black; padding: 10px;\"}\n\n<center>\n<img src=\"images/quarto_logo.svg\" width=\"20%\"></img>\n</center>\n\n<!-- start columns -->\n::: {layout=\"[48,4,48]\" layout-valign=\"center\"}\n\n::: {#r-studio-layout-cell}\n::: {#r-studio style=\"border: 2px solid black !important; padding: 8px;\"}\n\n{{< include _r-studio-box.qmd >}}\n\n:::\n:::\n::: {#quarto-plus-box}\n\n<h3 style=\"text-align: center;\">\\+</h3>\n\n:::\n::: {#python-layout-cell}\n<!-- start Jupyter column -->\n::: {#jupyter-col style=\"border: 2px solid black; padding: 8px;\"}\n\n{{< include _python-box.qmd >}}\n\n:::\n:::\n:::\n<!-- end columns -->\n\n:::\n<!-- end quarto box -->\n\n## Reproducibility and Literate Programming {.smaller .small-title}\n\n* **Reproducible document**: includes both the **content** (text, tables, figures) and the **code** or instructions required to **generate** that content.\n  * Designed to ensure that others can reproduce the same document, including its data analysis, results, and visualizations, consistently and accurately.\n  * tldr: If you're copying-and-pasting results from your **code output** to your **results document**, a red flag should go off in your head!\n* **Literate programming** is a coding and documentation approach where **code** and **explanations of the code** are combined in a single document.\n  * Emphasizes clear and understandable code by interleaving **human-readable text** (explanations, comments, and documentation) with **executable code**.\n\n## Single Source, Many Outputs {.smaller}\n\n* We can create content (text, code, results, graphics) within a **source document**, and then use different **weaving engines** to create different **document types**:\n\n::: columns\n::: {.column width=\"50%\"}\n\n* Documents\n  * Web pages (HTML)\n  * Word documents\n  * PDF files\n* Presentations\n  * HTML\n  * PowerPoint\n:::\n::: {.column width=\"50%\"}\n\n* Websites/blogs\n* Books\n* Dashboards\n* Interactive documents\n* Formatted journal articles\n\n:::\n:::\n\n# Demonstrations {data-name=\"Demonstrations\"}\n\n## VSCode Demonstrations\n\n* <span style=\"display: inline-flex;\">Quarto Websites <img src=\"images/vscode-globe.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Manuscripts <img src=\"images/vscode-circuit-board.svg\" width=\"60\" style=\"margin: 0 0.13em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Books <img src=\"images/vscode-book.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n\n## Posit.Cloud Demonstrations\n\n* <span style=\"display: inline-flex;\">Quarto Websites <img src=\"images/vscode-globe.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Manuscripts <img src=\"images/vscode-circuit-board.svg\" width=\"60\" style=\"margin: 0 0.13em;\"></img></span>\n* <span style=\"display: inline-flex;\">Quarto Books <img src=\"images/vscode-book.svg\" width=\"60\" style=\"margin: 0 0.125em;\"></img></span>\n\n# R in Quarto {data-stack-name=\"R in Quarto\"}\n\n## So... What is R?\n\n* Python was created mainly for **software engineers**\n  * Statistical computing functionality requires **3rd-party imports**: `NumPy`, `SciPy`, `scikit-learn`\n* **R** was created mainly for **statisticians**\n  * Software engineering functionality often requires **3rd-party libraries**: e.g., `purrr` (for Python-style `lambda` functions)\n* One key implication for DSAN: **probability distributions** (Normal, Binomial, etc.) are **built into** R! (Available through `NumPy` in Python)\n\n## Probability Distribution Example {.smaller .crunch-details}\n\nDon't worry about the details of the code for now! Just note how...\n\n::: {.columns}\n::: {.column width=\"50%\"}\n\n`rbinom()` is **built into** R, whereas\n\n```{r}\n#| echo: true\n#| code-fold: false\nset.seed(1234)\ncoin_results <- rbinom(n=20, size=10, prob=0.5)\nprint(coin_results)\nclass(coin_results)\n```\n\n```{r}\nlibrary(tidyverse)\ncoin_flip_df <- tibble(num_heads = coin_results)\nggplot(coin_flip_df, aes(x=num_heads)) +\n  geom_bar()\n```\n\n:::\n::: {.column .nostretch width=\"50%\"}\n\n`rng.binomial()` requires **NumPy**\n\n```{python}\n#| echo: true\n#| code-fold: false\nimport numpy as np\nrng = np.random.default_rng(seed=1234)\nten_coin_results = rng.binomial(n=10, p=0.5, size=20)\nprint(ten_coin_results)\ntype(ten_coin_results)\n```\n\n```{python}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nresult_plot = plt.figure()\nresult_plot.set_figheight(3.5)\ncoin_flip_df = pd.DataFrame({'num_heads': ten_coin_results})\nresult_plot = sns.histplot(data=coin_flip_df, x='num_heads')\nplt.tight_layout()\nplt.show()\n```\n\n:::\n:::\n\n## The Moment You've Been Waiting For ü§Ø {.title-08}\n\n* How did I include **both** R and Python code (and its outputs) in the previous slide?\n* Quarto allows **integration** of R+Python via **code blocks!**\n\n  ::: {.columns}\n  ::: {.column width=\"47%\"}\n\n  ```` {.quarto filename=\"my_file.qmd\"}\n  ```{{python}}\n  print(\"Hello from Python!\")\n  ```\n\n  ```{{r}}\n  print(\"Hello from R!\")\n  ```\n  ````\n\n  :::\n  ::: {.column width=\"4%\"}\n\n  &rarr;\n\n  :::\n  ::: {.column width=\"47%\"}\n\n  ``` {.bash code-line-numbers=\"false\"}\n  Hello from Python!\n\n  Hello from R!\n  ```\n\n  :::\n  :::"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"kable","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":"mathjax","slide-level":2,"to":"revealjs","output-file":"slides.html","include-in-header":{"text":"<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'><link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"}},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.23","auto-stretch":true,"title":"Week 6: Introduction to R + Python = Quarto","author":"Jeff Jacobs","institute":"DSAN Summer Bootcamp 2024<br>Georgetown University","slideNumber":true,"scrollable":true,"theme":["../_jjslides.scss"],"simplemenu":{"flat":true,"barhtml":{"header":"<div class='menubar'><span style='position: absolute; left: 8; padding-left: 8px;'><a href='./index.html'>&larr; Return to Notes</a></span><ul class='menu'></ul></div>"},"scale":0.5},"revealjs-plugins":["simplemenu"]}},"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"kable","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"index.html","include-in-header":{"text":"<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'><link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"}},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.23","theme":"default","title":"Week 6: Introduction to R + Python = Quarto","author":"Jeff Jacobs","institute":"DSAN Summer Bootcamp 2024<br>Georgetown University","html-math-format":"mathjax"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}